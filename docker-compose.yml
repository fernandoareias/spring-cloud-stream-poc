version: "3.9"

networks:
  kafka_network:
    driver: bridge

services:
#
#  stream-app:
#    build:
#      context: .
#      dockerfile: kafka-simple-stream/Dockerfile
#    environment:
#      - KAFKA_BROKERS=kafka1:9092,kafka2:9092,kafka3:9092
#      - SCHEMA_REGISTRY=http://schema-registry:8081
#      - MAVEN_OPTS=-X
#    networks:
#      - kafka_network
#    volumes:
#      - ./infrastructure/stream:/app/kafka-stream-state
#    depends_on:
#      - kafka1
#      - kafka2
#      - kafka3
#      - schema-registry
#    command: sh -c "sleep 40 && exec \"$0\" \"$@\""


  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    ports:
      - 8083:8080
    environment:
      KAFKA_BROKERS: "kafka1:9092,kafka2:9092,kafka3:9092"
      SCHEMA_REGISTRY_ENABLED: "true"
      SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONSOLE_ENABLE_BASIC_AUTH: "false"
    networks:
      - kafka_network
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - schema-registry

  kafka1:
    image: 'bitnami/kafka:latest'
    platform: linux/amd64
    ports:
      - 19090:19090
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=vrCaRnqWS66JNWVQrv7aEg
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:19090,CONTROLLER://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka1:9092,EXTERNAL://127.0.0.1:19090
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9094,2@kafka2:9094,3@kafka3:9094
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./infrastructure/kafka1:/bitnami/kafka
    networks:
      - kafka_network

  kafka2:
    image: 'bitnami/kafka:latest'
    platform: linux/amd64
    ports:
      - 19091:19091
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_BROKER_ID=2
      - KAFKA_KRAFT_CLUSTER_ID=vrCaRnqWS66JNWVQrv7aEg
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:19091,CONTROLLER://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka2:9092,EXTERNAL://127.0.0.1:19091
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9094,2@kafka2:9094,3@kafka3:9094
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./infrastructure/kafka2:/bitnami/kafka
    networks:
      - kafka_network

  kafka3:
    image: 'bitnami/kafka:latest'
    platform: linux/amd64
    ports:
      - 19092:19092
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_CFG_BROKER_ID=3
      - KAFKA_KRAFT_CLUSTER_ID=vrCaRnqWS66JNWVQrv7aEg
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:19092,CONTROLLER://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka3:9092,EXTERNAL://127.0.0.1:19092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9094,2@kafka2:9094,3@kafka3:9094
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./infrastructure/kafka3:/bitnami/kafka
    networks:
      - kafka_network

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    platform: linux/amd64
    ports:
      - 8081:8081
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka1:9092
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - kafka_network

  connect:
    image: "debezium/connect:latest"
    environment:
      GROUP_ID: "1"
      REST_ADVERTISED_HOST_NAME: "connect"
      BOOTSTRAP_SERVERS: "host.docker.internal:9092"
      CONFIG_STORAGE_TOPIC: "my_connect_configs"
      OFFSET_STORAGE_TOPIC: "my_connect_offsets"
      STATUS_STORAGE_TOPIC: "my_connect_statuses"
      CONNECT_PLUGIN_PATH: "/kafka/plugins"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
    ports:
      - "8083:8083"
    container_name: "connect"
    volumes:
      - ./kafka/connect:/kafka/connect
      - ./debezium-connector-mongodb:/kafka/plugins/debezium-connector-mongodb
    networks:
      - treinamento


volumes:
  kafkadata1:
  kafkadata2:
  kafkadata3: